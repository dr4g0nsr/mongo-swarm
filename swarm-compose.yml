version: "3.3"

networks:
  mongo:
    external: true
  mongos:
    external: true

volumes:
    data: {}
    cfg: {}

services:

  data1:
    image: mongo:latest
    networks:
      - mongo
    volumes:
      - data:/data/db
    command: mongod --shardsvr --replSet datars --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.data1 == 1

  data2:
    image: mongo:latest
    networks:
      - mongo
    volumes:
      - data:/data/db
    command: mongod --shardsvr --replSet datars --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.data2 == 1

  data3:
    image: mongo:latest
    networks:
      - mongo
    volumes:
      - data:/data/db
    command: mongod --shardsvr --replSet datars --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.data3 == 1

  cfg1:
    image: mongo:latest
    networks:
      - mongo
    volumes:
      - cfg:/data/configdb
    command: mongod --configsvr --replSet cfgrs --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.cfg1 == 1

  cfg2:
    image: mongo:latest
    networks:
      - mongo
    volumes:
      - cfg:/data/configdb
    command: mongod --configsvr --replSet cfgrs --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.cfg2 == 1

  cfg3:
    image: mongo:latest
    networks:
      - mongo
    volumes:
      - cfg:/data/configdb
    command: mongod --configsvr --replSet cfgrs --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.cfg3 == 1

  mongos1:
    image: mongo:latest
    networks:
      - mongo
      - mongos
    command: mongos --configdb cfgrs/cfg1:27017,cfg2:27017,cfg3:27017 --bind_ip_all
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.mongos1 == 1

  mongos2:
    image: mongo:latest
    networks:
      - mongo
      - mongos
    command: mongos --configdb cfgrs/cfg1:27017,cfg2:27017,cfg3:27017 --bind_ip_all
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.mongos2 == 1

  mongos3:
    image: mongo:latest
    networks:
      - mongo
      - mongos
    command: mongos --configdb cfgrs/cfg1:27017,cfg2:27017,cfg3:27017 --bind_ip_all
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.mongos3 == 1

  bootstrap:
    image: stefanprodan/mongo-bootstrap:latest
    networks:
      - mongo
    command:
      - '-dataSet=datars/data1:27017,data2:27017,data3:27017'
      - '-configSet=cfgrs/cfg1:27017,cfg2:27017,cfg3:27017'
      - '-mongos=mongos1:27017,mongos2:27017,mongos3:27017'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
